@model iHealth2.Models.reply_comment_viewModel
@using Microsoft.AspNet.Identity.EntityFramework;
@using Microsoft.AspNet.Identity
@using iHealth2.Models;
@{
    ViewBag.Title = "reply_comment";
    ApplicationDbContext db = new ApplicationDbContext();
    var user = db.Users.Find(User.Identity.GetUserId());
    switch (user.UserType)
    {
        case "BusinessUser":
            Layout = "~/Views/Shared/_UserPanelLayout.cshtml";
            break;
        case "INISubcriber":
            Layout = "~/Views/Shared/_INISubcriberLayout.cshtml";
            break;
        case "AD":
            Layout = "~/Views/Shared/_AdminLayout.cshtml";
            break;
        case "SA":
            Layout = "~/Views/Shared/_SuperAdmLayout.cshtml";
            break;

    }
}

<div class="panel panel-default">
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.comment_by_email)
    @Html.HiddenFor(m => m.comment_by_name)
            @Html.HiddenFor(m=>m.reply_by_name) 
               @Html.HiddenFor(m => m.post_title)
                <div class="form-group">
                    <label class="control-label">To : @Html.DisplayTextFor(model => model.comment_by_email)
                  
                    </label>                   
                </div>
                <div class="form-group">                   
                    <div class="controls">
                        <div class="alert alert-block alert-danger"><p>@Model.comment_content</p></div>
                    </div>
                </div>
                <div class="form-group">
                   <label>Content</label>
                    <div class="controls">
                        <textarea required class="form-control" name="reply_content" style="width: 100%; height: 125px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>
                        @Html.ValidationMessageFor(model => model.comment_content, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="controls">
                        <a href="@Request.UrlReferrer.ToString()" class="btn btn-danger pull-right">Back &nbsp; <i class="glyphicon glyphicon-circle-arrow-right"></i></a>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <input type="submit" value="Reply" class="btn btn-success pull-right " />
                              </div>
                </div>
           
        }

        <div>
          
        </div>

    </div>
</div>
