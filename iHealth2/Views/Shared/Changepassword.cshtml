@model iHealth2.Models.ResetPasswordViewModel
@using Microsoft.AspNet.Identity.EntityFramework;
@using Microsoft.AspNet.Identity
@using iHealth2.Models
@{
    ViewBag.Title = "Change password";

    ApplicationDbContext db = new ApplicationDbContext();
    var user = db.Users.Find(User.Identity.GetUserId());

    switch (user.UserType)
    {
        case "BusinessUser":
            Layout = "~/Views/Shared/_UserPanelLayout.cshtml";
            break;
        case "INISubcriber":
            Layout = "~/Views/Shared/_INISubcriberLayout.cshtml";
            break;
        case "AD":
            Layout = "~/Views/Shared/_AdminLayout.cshtml";
            break;
        case "SA":
            Layout = "~/Views/Shared/_AdminLayout.cshtml";
         //   Layout = "~/Views/Shared/_SuperAdmLayout.cshtml";
            break;

    }

}


<div class="panel panel-default">
    <div class="panel-body">
        <h2>@ViewBag.Title</h2>
        <br />
        @using (Html.BeginForm("changepassword", "account", FormMethod.Post, new { @class = "", role = "form" }))
        {
            @Html.AntiForgeryToken()


            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Code)
@Html.HiddenFor(model=>model.Email)
            @*<div class="control-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label", @style = "font-weight:700" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    <br />

                </div>
            </div>*@
            <br/>
            <div class="control-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label", @style = "font-weight:700" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    <br />
                </div>
            </div>
            <br/>
            <div class="control-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label", @style = "font-weight:700" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    <br />    
                </div>
             
            </div>
           
            <div class="control-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-danger" value="Reset Password" />
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
